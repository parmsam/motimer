name: Publish Notebook to GitHub Pages

on:
    push:
        branches: ["main"]
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: üõéÔ∏è Checkout repository
              uses: actions/checkout@v4

            - name: üêç Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: üì¶ Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install marimo anywidget traitlets
                  pip install git+https://github.com/parmsam/motimer.git

            - name: üß™ Test import
              run: |
                  python -c "from motimer import TimerWidget, StopwatchWidget; print('Import successful!')"

            - name: üìÑ Export notebook
              run: |
                  mkdir -p output
                  # Add .nojekyll to prevent GitHub from interfering with the site
                  touch output/.nojekyll
                  
                  # Export the notebook to WASM HTML
                  marimo export html-wasm demo.py -o output --mode edit
                  
                  # Copy motimer module to output for fallback import support
                  # This needs to be done after export to ensure it's available for WASM
                  cp -r motimer output/assets
                  
                  # Debug: List all files created by the export
                  echo "Files created in output directory:"
                  ls -la output/
                  echo "Checking for assets directory:"
                  if [ -d "output/assets" ]; then
                      echo "Assets directory found:"
                      ls -la output/assets/
                  else
                      echo "No assets directory found - this might cause issues"
                      echo "Creating assets directory and checking if we need to copy anything..."
                      mkdir -p output/assets
                  fi
                  
                  # Verify the main HTML file exists
                  if [ -f "output/demo.html" ]; then
                      echo "Main HTML file found: demo.html"
                  elif [ -f "output/index.html" ]; then
                      echo "Main HTML file found: index.html"
                  else
                      echo "Warning: No main HTML file found"
                      ls -la output/*.html || echo "No HTML files found"
                  fi

            - name: üì¶ Upload Pages Artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: output

    deploy:
        needs: build
        runs-on: ubuntu-latest
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        permissions:
            pages: write
            id-token: write

        steps:
            - name: üåê Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
              with:
                  artifact_name: github-pages